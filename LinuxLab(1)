To rename a file:
mv /home/ac.txt /home/abc2.txt

To ping google:
ping -c 5 google.com // pings 5 times.

tail -100 abc.txt // shows last 100 lines.
tail -f abc.txt // 

File and directory commands

--------
ls -l | cat >> filenew 
----------

mkdir file1 file2 fileN.. : make directory 

touch filename : creates an empty file in the current directory 
touch file1 file2 file3... created multiple files


cat >> filename : creates file to write into file 
This command appends the file. (eof)
End of file pey jata hai. 


cat > filename : creates file.
overwrites the file, pointer goes to the starting. 
eg : 
a. cat >> file4    write some data
b. cat > file4	   write some more data :P 


command to delete a file  : 
rm file1 

command to delete a directory : 
rmdir directoryname


to force delete a Directory : rm -r directoryName 









wild card character's : 
1. *  : any number of characters.
2. ?  : one character.
3. [] : range of characters.


cd bin.
Bin folder :it contains utilities / commands that on execution will return the output from the file strcuture of the linux.



command : ls * 

command : ls b* or ls s* 


command : ls *s

command : ls l???x2

command : ls [a-z]* 

command : ls [al]*  //'a' sey start honney vaaley saarey aur 'l' sey start honney vaaley saarey aa jayengey.

command : touch file{1,2,3,5}







exp 9. (29/7/2015)

- 
chmod command : 


-rw-rw-r--
file. next 3 for user. next 3 for group. next 3 for others.

premission count : 
r : 4
w : 2
x : 1

so if rw = 4+2 = 6


command to change permission : 
chmod 644 file1
sets user to 6, group and others to 4 which is read.


set 
chmod 000 filename : it locks down the file basically. sets read, write and execute to 0 that is no permission.


default condition for file is : 664
default condition for a directory is : 775 (drwxrwxr-x)

for maximum permission : 777

you must always assign a 'read' to file else you can't even write or execute the file.
So it's a must to assign 'r' or 'read' to the file.




---

cp mv (copy and move commands ) 

syntax for copy  : cp sourcePath destinationPath 
eg : cp /enter full proper path/permit/file2   /proper path/destination..

syntax for move :  mv sourcePath destinationPath 
eg : mv /enter full proper path/permit/file2   /proper path/destination..



=> To copy all the files to a destination we use the switch "-r" which stands for recursive.
syntax : cp -r permit hello  //will copy the whole of the folder to the destination directory.


=> To prevent overwriting of an existing file we use the switch '-n' so that it gives the error 'omitting directory' 
syntax : cp -n permit Hello //Hello folder has a permit folder inside it.

=> TO copy the output of a command or file to  another file
the syntax is : ls > hi.txt //output of the command 'ls' goes into the file 'hi.txt' 
-This command is useful for storing the outputs of the programs and also used in like log files.


=> cat file1 file2 > new 
concatenates the contents of the two files, one after the other then appends it into the new file "new".

=> cp -v sourcepath destination path
Here the switch "-v" stands for verbose and it displays the background details of the actions/process being carried ou


-------------------------------------------------------------------

5th August 2015

Search utilities
- locate 
- find
- grep


locate : 
switches with locate...

1. locate -A filename   //-A means all the directories starting from root. Also -A goes for the exact match.
eg : locate -A images    //'images' -> this is the pattern.
Every file or directory name where the pattern images matches it will be displayed.
-We can also use a pipeline  eg : locate -A images | more / less (choose any)
-So this command shows all the occurences which match with the pattern. 



2. Find command : 

syntax : find      .       -name      ________       -print
explanation : . means pwd
	      -name is the name of the file
	      ______ : user defined pattern
             -print is to print it on the terminal 

eg : to find a file in documents. Change the directory to documents.
Then type in : find . -name file1 -print     //print switch is optional

Info : . is the path
[-name _____] : this is the selection criteria 
[-print] : this is the action




To search in root : find / -name _______
eg : find / -name images //searches in the root



To search for an image eg : 
find . -name *.png 
find . -name *.gif
another way of writing is : find . -name "*.png"   //"" are optional.


Another way : find . -name '[A-Z]*'
another : find . -name '[A-Z][a-z]*'
another : find . -name '[Ii][Mm]*'  //This gives the names of file starting with Im or iM or IM or im.

Find command for the type : 
=> find . -type d   //This command lists the directories in the pwd.
=> use f for the files and 'l' for the links / shortcuts.

To find in a specific path use the following syntax : 
=> find /home/sivcan/Desktop -name ___nameOfFile____


To search according the permissions : 
=> find . -perm -664   //This will search for file's or directories with the 664 permissions. 


Imp points about locate command : 
locate -A file1 file2
=> if file1 is found and file2 isn't then it will show.
=> if file1 is not found then the whole command will terminate without searchin for file2.


-b : This switch cannot search the kernel files and thus produces a difference of 1/10 from the -A switch.

-i : This switch means ignore case.

-n : limit the number of files.



-----------------------------------------------------------------------------------------------------------------------


GCC debugging - 11th Aug 2015

*working on the file named example.c*

command : gdb nameofBInaryFile //stands for GNU Debugger
command (gdb) : file nameofbinaryFile 
eg (gdb) : file example   //we are passing the binary file to the debugger.


What is a token ? 
Ans. A token is like splitting of your program into small packs more of like into small blocks.
They're generated like symbols.


once symbol table is generated after the above file example command.

Next command is : 
=> run //this executes the above binary file.


next command :
=> help 

next command : 
=> break main  //This sets up a breakpoint before main.
Syntax : break functionName
syntax : break lineNumber     //to add a breakpoint at a line number in the program. eg : break 7  (this adds a break point at line number 7)
The concept of breakpoint : If a program runs into suppose infinite error or more of like the program needs to be halt. So we use breakpoints after a few lines of codes.
This is very useful when you've to rectify the error in the program.
So you put in break points in the program, and the program halts at a breakpoint and continue's only if the user or the debugger wants to.

eg : break main (hit enter)
now to continue after breakpoint 
enter
=> c
This will move to the next breakpoint.


TO remove a breakpoint
command : delete idOfBreakpoint 
eg : delete 1 


--
To disable a breakpoint 
command => disable breakpointID
eg : disable 1 or disable 2
Note : There's a difference between delete and disable. 

Last command name : 
quit //obv to quit the debugger :p lol



-------------

12th Aug 2015

command => diff     //Very complex command
This command allows us to different between two or (more?) files. 

eg : diff file1 file2

1C1,3 : means replace the computer with the 3 entries in the other file. 1,3 means entry 1 to entry 3.
3d5 : This means that delete 3rd entry from first file so that it's similar till fifth index.
5C6 : Replace 5th entry with the 6th entry. 

command => paste file1 file2 |nl

command to switch to root => sudo -s

The concept of mount and unmount.
Eg of mount : To plug in the USB, the pen drive gets mounted hence opens the files of the USB.
Eg of unmount : To plug out the USB, the pen drive gets unmounted.

command => fdisk -l 
This command lists the partitions of the hard disk.


/dev/sda1 : The number 1 and so on tell us about the number of partitions.




----------------------------------------------
14 Aug 2015
 
Linux is preferred over others because linux contains multiple super blocks.0

command => fdisk /d

now press tab to go to : fdisk/dev/
now enter sda... : fdisk/dev/sda 

now press 'm'

now to see the partitions, press  : p


To mount a device : 

command => mount -l

command => mount -t ext2 /dev/h.dat //donot run this command though. used to pring the directory to the linux file system.


Steps to mount a USB.

1. attach a USB.
2. command => mount -l
3. command => mkdir /mnt/sdb1





command => gedit /etc/fstab   //this file contains the list of the partitions made during installation.. and lists all the partitions and the devices of the system.
Now to mount the USB.
Enter into file : /dev/sdb1 /mnt/sdb1 vfat defaults 0 0      //save it using the root priviledges.


then save it.


After saving it, enter the command : mount -a
into the terminal.
This command then mounts the usb to the system.



Now to unmount the usb from the system : 
umount /mnt/sdb1   //the same path that we entered when mounting it to the system.


Command to mount the CDrom drive  => mount -t iso9660 -o ro /dev/cdrom/mnt 
then enter : mount -a 

But since the CD rom's mount point is already created during installation, so we donot need to create a mount point for it.



-----

Extra info (out of syllabus)


command => df 
command => sudo /dev/sdb1

Now to format the USB : 
sudo mbfs.vfat -n 'newName' -I /dev/sdb1

vfat : to make the filesystem as fat. 

----------------


Phases fsck  //filesystem check or repair.
Steps : 
1. Check blocks and sizes.
2. Check path names.
3. Check connectivity between all directories.
4. Check reference counts.
5. Checks the cylinder groups. Checks the free blocks, then used inode maps.
6. Salvage cylinder groups. 
7. Update table to reflect any changes made in earlier phases.


To check for the version of fsck
command => fsck /dev/sda2


To repair files, command => fsck -A

command => fsck -a -AR //This repairs the filesystem of the root also.


To repair a particular file, command => fsck -AR -t extensionOftheFile(eg. ext2, ext3, ext4) -y


------------------------------------------

18 August

command => fdisk -l 

/dev/hda   vs   /dev/sda   : hda used IDE whereas the new one's are sda : 's' in sda stands for the SATA.

In the harddisk : concentric circles are the tracks / heads.
Further they're split in sectors. sectors are further divided into cylinders.

Boot files are located in the track 0 of the cylinder.

-----

command => mesg n 

------------
note : WHO command is used to check for which terminal we are logged into.
------------

install a mail utility.
=> sudo apt-get install mailutils 

-------------------------

Local only : mail utility.

command => useradd -s /bin/bash userName 
command => passwd john
command => mail john

Enter cc, then enter subject.

open user.
type in : john
type in : mail
Enter a ' . ' at the end and press Ctrl+D.

then type in mail number to see the mail :P

 

Command to delete a user : 


=> userdel john


-----

command => netstat -n tcp | more

sudo apt-get install finger

command => finger

See the difference between who and finger command.

URL => nullroute.eu.org/finger/?q=%40athena.dialup.mit.edu

----------------------



Aug 19 

VI editor : 

insert mode : to insert text into file / to edit the text.

normal mode : to delete the characters and do the other stuff. 
----
Navigation category : 

h, j, k, l : they also act as left, down, up and right key.

pg Down : Ctrl + f
pg Up : Ctrl + b

----

Edit the file : 

use 'i' and 'esc' 

---

command for vi : 'G'   //PS : The editor is case sensitive.

This goes to the end of the file. 

---


To delete entire word : dw
To delete entire line : dd
To delete till end of line and doesn't shift the line up : d$
Undo command : u

----
Searching : 

go to EOF and type in : / filename 
To navigate between the search, use the key 'n' 

---

Copy and paste : 

Wherever the cursor is, press 'yy' 
it will copy the line..
Then move cursor somewhere else and press 'p' to paste.
To copy multiple lines : 
2yy 
3yy 
etc... 

To select text, press 'v' //means visual mode.
Now select the lines and then press 'yy' 

---

Replace : 
Press 'r' for replacing a letter.
Press 'R' for replacing the whole word.


----
To navigate word by word : 
press 'w'

'L' : goes to last line of the file.
'M' : goes to middle of the file.
'H' : goes to the top of the file.

--
Launch terminal.
Go to a specific directory. 
Launch gdb.
load a binary file.
Command => layout asm
Shows the data of the binary file in assembly language.

main+4
main+5  //means next instruction needs 1 byte
main+15  //means next instructions needs 10 bytes.. and so on.  

------------------------------------------------------------------------------------------------------------------------------------------

emax editor to be done..!


-----

24th August 2015.

useradd -s /bin/bash -d /home/user234 -c "EnterAComment"  user234

/bin/bash : this is the shell.
-d /home/user : represents home directory
EnterAComment : Enter a name here, acts as the name of the user.

To change the password of the user..
command => passwd user234


Now verify the usercreated
1. Check in  /etc/passwd whether the user files have been created or not.
there's this line in the file passwd  : user234:x:1001:1001:Sivi:/home/user234:/bin/bash
In this, 
1001 is the ID given to the user by the linux.

2. Check in /etc/shadow  
there's this line in the file shadow : user234:$6$5vedF2Jo$L2Z/el7bcObTlaYnTX01Wr1yQyVfuPR/HVKatim.XwlHQHj4p8a5Lz0LP.zj6SEcYnIflMErhqdk9lOQv2ufw1:16671:0:99999:7:::

The weird encrypted value is actually the password of the user.

3. check in /etc/sudoers




Note : to switch to other user, type : su - user234

---
1. Open /etc/sudoers file with root priviledges.
Now paste the line : root	ALL=(ALL:ALL) ALL 
at the end of the file
Replace root wih user234 



By default any user created will not have any admin priviledges.
if this is the case that means that user will not be able to execute any sudo task (because not an admin)

Then in order to do that, we must make the user a super user.
Which is to make an entry in the sudoers file.

user234 ALL=(ALL:ALL) ALL


and then we have to save that file..
After this, the user will be able to perform the root priviledges task.





command => useradd -D

INACTIVE -1 
-1 means it will never expire.
Group always stays 100

to change the group ID 
: sudo usermod -g 1000 user157

To delete user : 
userdel -r userName

------

Umask (Unix) 
Stands for : User Mask or User file creation MASK 



Default umask value on every file in unix : 0022
Default umask value on every file in linux is : 002 
first bit : not to be touched.
The last 3 values form the triplet.

For maximum permission on file   : 666  (only 'r' and 'w' ) 
For max. permission on directory : 777

Subtract Umask value from maximum value of file : 
Default for file :  666 - 022 = 644 //on unix 
for directory : 777 - 022 = 755 // on unix

whereas on linux : (because default umask value is: 002) 
664 and 775. !


command  => umask 

to change umask default value : umask 0026  //enter the new value.


Chmod : another way... 
user : u
group : g
others : o
all  : a

+ : grant
-  : revoke
= : assign the same permission from user to group etc.

Suppose I want to add execute permission to a user..
command => chmod u+x fileName

To remove : 
command => chmod u-x fileName


For all : 
command => chmod a-x fileName
to add : 
chmod a+x fileName 

or 

chmod a+r fileName 

etc.

For same assign : 

chmod go=u fileName

To remove multiple file permissions : 

eg : chmod o-rw fileName

Advance level :P   .. : 
chmod u+x,g-w FileName 


--

command : chown userName file/directoryname 

-----------

Note : filesecurity in linux means file permissions only. 

----------

command => ! history

command => history | grep ls 
to count : history | grep ls -c 


command : pwd; ls    //the commands get executed in the sequence from left to right..


command : kill -9 -1   //this will logout the user.


-----------------------------------------------------------------------------

type : history
choose a number and type : !xyz (xyz = a number)
eg. : !223

---
August 28th

Process commands..

command => ps
Shows the terminal names and all..

command => ps -A
This command shows all the running processes in the system.

p.s : watchdog process : It's the firewall


command => ps -p processID   //Identifying the process for processID 
This will list the detais of the process.

eg : ps -p 2330

command => ps -l
UID : User ID 
PID : process ID
PPID : parent process ID    //parent process creates child process.

This gives the pstree (Process tree) 
A hierarchy is created.


command => pstree
This shows the whole process tree.
This shows the "system processes"       
.
Extra info : process 'cron' , cron is the scheduler which tells which process starts when and all. cron plays a big role with init. 

command => ps -au  //This commands details about the process and how much CPU utilization is there.
a : all
u : user processes

Technical name for virtual terminal is : 'getty'  : and by default root has the user priviledges to access it. 
Technical name for graphical terminal : bash



command => ps -au -x
x : Linux processes
This command also shows the entries for the linux processes (all linux entries)
Gives a very elaborated detail of all the processes.
Shows the path of the processes also from where they are running.

command => ps -C getty
Shows the PID of the getty

command => ps -f -C getty
More details as you can see in the command.
1
command => ps -axjf
a : all
x : linux 
j : jobs
f : forest

Process command only runs on : BSD format or ASCII format 
with -j it goes to ASCII format
whereas  without '-j'  it shows the BSD format way.

command => ps -l    /   ps l
Without the switch also this command works the same.
Lists the processes.
ps -l : This is the ASCII format  (The ' - ' matters. ) 
ps l : This is the BSD format 
Just the display format is different.

Even with the '-j' thing.
 
 
command => top
This command displays the system performance.
Runs in real time and shows the real time usage of the CPU and memory by the different processes.

2567 pts/0    00:00:00 bash
 3321 pts/0    00:00:00 ps


command => kill -9 PID 
This kills the process running with the PID. 
-9 : Kills all the tasks.


command => killall -u sivcan
This kills all the  processes with the user.

-----------------------------------------------------------------------------

Experiment 21  : Septemer 2 2015

Network Operations 

IP : Internet Protocol
IP address of a computer is basically used to identify a unique device on the network.

There are classes of IP address. 

Class A : 0 - 127  
Class B :  128 - 191 
Class C :  190 - 224
Class D : 224 - 239
Class E :  240 - 255

-

Browsers  : 
- Graphical and Non Graphical 
- eg. of graphical : firefox, chrome, etc.
- Eg. of non graphical : lynx, links or elinks, w3m.

lynx: very old browser. It provides the data in lines and all..
links or elinks : it is the enhancement of the lynx. they provide data in the form of tables etc.
w3m : This provides the data in the latest form available. (latest browser for linux) 

command => wget <url>
This is used to download the files of the net using the terminal.

eg. : wget https://www.google.com

command => curl <url>
This commands provides the information about the URL alongside with downloading the file.
Whereas the URL feature is not available with the wget command.
So curl is the upgraded version of the wget command. 



FTP : File Transfer Protocol 
FTP protocol server is the client-server protocol.

FTP client :  The browser of the explorer etc. basically the graphical or the non graphical app accessing the ftp server.
Graphicals Tools : Filezille 
Non Graphical Tools : ftp, ncftp, sftp (this is the secure file transfer protocol), yafc.

------------------------

Exp 24 September 14th

Regular Expressions, Filters and and Redirections

Redirections : 
< : Input redirection
> or >> : Output redirection

command => cmp (compares using byte-by-byte whereas diff does line-by-line)

command => sort file1 file2 -o filex
This sorts the files and writes the output to the filex.

command=> sort
This takes the input from user and after ending the file..(using Ctrl +D)
it will sort the input.

command => sort -n
This will sort the numbers entered by the user.

command => sort -f 
To ignore the case and sort the entries.

to sort using the middle name..
command => sort +1 -2 fileName
If there is a first name, middle name and a last name in the file then the sort command will sort the words using the middle name.
These are index values..starting from 0. (treat them as an array.)


------------------------------

Exp 25-35 : Shell Scripting 
Exp. 25 : Shell Scripting

The program is a shell script and the extension is : .sh

Why Shell Scripting ? 
1. Automate tasks.
2. Reduce human effort.
3. Scheduling.
4. Tasks/scripts of one user shared by another user.

Debug & execute.
To execute : 
bash 1.sh

or 
1.sh

To execute my file I need an 'x' permission on the user.


Shells : 
csh 
ksh 
bash
bsh
sh
tcsh

Command => expr 8 + 8

expr 8+8 gives result : 8+8
expr 8 + 8 gives result : 16

command => echo $(expr 8 + 8 )
result : 16

x=5;
command=>echo $[x+1]
result : 6

command => echo $((x+1))

command=> echo $(date)

Double paraenthsis for keywords.
Single paraenthsis for commands.blah :P 

To start with the shell scripting..
# : This means that the line is a comment.
#! : This gives the path.(this is also a commented line). eg: #! /bin/bash

eval x=5
echo $x

 
 
 To execute : bash 1_var.sh
 
 Different method : 
 chmod u+x 1_var.sh
 
 to execute now : ./1_var.sh
 
 
 In shell : 
 if(0) = true
 and if(1) = false
 
 if [             ] ; then    //everything in this line is space seperated.
 echo  aMessage...
 else
 echo aMessage..
 
 
 command => echo $HOME `date`
 
printf("wrong command")

